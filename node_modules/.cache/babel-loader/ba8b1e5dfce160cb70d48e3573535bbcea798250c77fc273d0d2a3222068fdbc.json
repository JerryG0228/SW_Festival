{"ast":null,"code":"var _jsxFileName = \"/Users/zoo/Desktop/swFestival/src/components/celestialSphere/Sphere.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport versor from 'versor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sphere() {\n  _s();\n  const d3Container = useRef(null);\n  useEffect(() => {\n    if (d3Container.current) {\n      d3.select(d3Container.current).select('canvas').remove();\n      const svg = d3.select(d3Container.current);\n      let starPath = null;\n      var width = 650; // window.innerWidth;\n      var projection = d3.geoOrthographic();\n      var sphere = {\n        type: 'Sphere'\n      };\n      var height = function (c) {\n        var c = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere);\n        var x0 = c[0][0];\n        var y0 = c[0][1];\n        var x1 = c[1][0];\n        var y1 = c[1][1];\n        var dy = Math.ceil(y1 - y0);\n        var l = Math.min(Math.ceil(x1 - x0), dy);\n        projection.scale(projection.scale() * (l - 1) / l).precision(0.2);\n        return dy;\n      };\n      height = height(width); // made it as number\n\n      const div = svg.append('div');\n      var canvas = div.select('body').append('canvas').attr('width', width).attr('height', height);\n      if (!canvas.empty()) {\n        var context = canvas.node().getContext('2d');\n\n        // Angeles National Forest\n        var observer = {\n          longitude: -118.133333,\n          latitude: 34.333333\n        };\n        var obChger = [observer.longitude, observer.latitude];\n\n        // Lambda λ(scr y axis), Phi φ(scr x axis)\n        function flippedStereographic(λ, φ) {\n          var cosλ = Math.cos(λ);\n          var cosφ = Math.cos(φ);\n          var k = 1 / (1 + cosλ * cosφ);\n          return [-k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n        }\n        var projectionLookup = d3.geoProjection(flippedStereographic).scale(width / 2).clipAngle(90).rotate([-observer.longitude, -observer.latitude]).translate([width / 2, height / 2]).precision(0.1);\n        projection.scale(width / 2).clipAngle(90).rotate([observer.longitude, observer.latitude]).translate([width / 2, height / 2]).precision(0.1);\n\n        // lookup view\n        var lookupPath = d3.geoPath(projectionLookup, context);\n\n        // drag use\n        var dragPath = d3.geoPath(projection, context);\n        var gratln = d3.geoGraticule().step([15, 15]).stepMajor([90, 360]).extentMinor([[-180, -75 - 1e-6], [180, 75 + 1e-6]])();\n        var meridian0 = d3.geoGraticule().step([90, 0]).extent([[-0.1, -90 - 1e-6], [0.1, 90 + 1e-6]])();\n        var equator = d3.geoGraticule().step([0, 90]).extent([[-180, -1], [180, 1]])();\n        var ecliptic = {\n          type: 'LineString',\n          coordinates: [[-180, 0], [-90, -23.43656], [0, 0], [90, 23.43656], [180, 0]]\n        };\n        var stars,\n          ctLines,\n          rScale,\n          legendScale,\n          legendSqrt,\n          cLegend = [];\n        var map = d3.select('body').append('svg').attr('width', width).attr('height', width / 10).attr('transform', 'translate(-500, 80)').append('g').attr('id', 'legend').attr('transform', 'translate(20, 35)');\n        function drawLegend(min, max) {\n          cLegend.push(min);\n          for (let i = 0; i < max; ++i) {\n            cLegend.push(i);\n          }\n          cLegend.push(max);\n          legendScale = d3.scaleLinear().domain([min, max]).range([30, height - height / 10]);\n          legendSqrt = d3.scaleSqrt().domain([min, max]).range([max, 0.25]);\n          d3.select('#legend').selectAll('circle').data(cLegend).enter().append('circle').attr('r', function (d) {\n            return legendSqrt(d);\n          }).attr('cx', function (d) {\n            return legendScale(d);\n          });\n          d3.select('#legend').selectAll('text').data(cLegend).enter().append('text').attr('x', function (d) {\n            return legendScale(d) - 4;\n          }).attr('y', -25).attr('fill', 'red').text(function (d) {\n            return d;\n          });\n        }\n        var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.lines.json';\n        d3.json(urlA).then(function (d) {\n          ctLines = d;\n        });\n        var urlB = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/stars.8.json';\n        d3.json(urlB).then(function (data) {\n          stars = data;\n          var maxMag,\n            starsize = [];\n\n          //bl.ocks.org/pnavarrc/9730300\n          rScale = d3.scaleSqrt() // scaleLinear()\n          .domain(d3.extent(data.features,\n          // d => d.properties.mag\n          function (d) {\n            starsize.push(d.properties.mag);\n            return d.properties.mag;\n          })).range([d3.max(starsize), 0.25]);\n          /*\n          // - Try to draw stars legend\n          // d3.max() Mag. dimmest: 8\n          // d3.min() Mag. brightest: -1.44\n          cLegend = [d3.min(starsize), 0, 1, 2, 3, 4, 5, 6, 7, d3.max(starsize)];\n          */\n          // drawLegend(d3.min(starsize), d3.max(starsize));\n          // - End Try\n\n          starPath = d3.geoPath(projectionLookup, context).pointRadius(d => rScale(d.properties.mag));\n\n          /** the shortest version without rScale\n          starPath = d3.geoPath(projection, context)\n          .pointRadius(d => d.properties ?\n          d3.scaleLinear()\n          .domain(d3.extent(star.features, d => d.properties.mag))\n          .range([5, 1])(d.properties.mag) : 5\n          );\n          */\n          function render(highend) {\n            context.clearRect(0, 0, width, height);\n\n            // Globe Background\n            context.beginPath();\n            lookupPath(sphere);\n            context.fillStyle = 'rgb(1, 16, 32)';\n            context.fill();\n\n            // Graticule\n            context.beginPath();\n            lookupPath(gratln);\n            context.lineWidth = 0.5;\n            context.strokeStyle = '#fff';\n            context.stroke();\n\n            // Equator\n            context.beginPath();\n            context.lineWidth = 2.0;\n            lookupPath(equator);\n            context.strokeStyle = 'rgba(255, 0, 0, 0.85)';\n            context.stroke();\n\n            // Prime Meridian\n            context.beginPath();\n            lookupPath(meridian0);\n            context.strokeStyle = 'rgba(16, 138, 0, 0.85)';\n            context.stroke();\n\n            // Ecliptic\n            context.beginPath();\n            lookupPath(ecliptic);\n            context.strokeStyle = 'rgb(241, 177, 14)';\n            context.stroke();\n\n            // Constellations Lines\n            context.beginPath();\n            lookupPath(ctLines);\n            context.lineWidth = 1.0;\n            context.strokeStyle = 'rgb(255, 255, 32)';\n            context.stroke();\n            if (highend) {\n              // Stars Map\n              stars.features.forEach(star => {\n                context.beginPath();\n                starPath(star);\n                context.fillStyle = 'rgba(255, 255, 255, 0.5)';\n                context.fill();\n              });\n            }\n            // Globe Edge\n            context.beginPath();\n            dragPath(sphere);\n            context.lineWidth = 4.0;\n            context.strokeStyle = '#00f';\n            context.stroke();\n          }\n          render();\n\n          // zoom v6\n          return d3.select(context.canvas).call(zoom(projection).on('zoom.render', () => render(false)).on('end.render', () => render(true))).call(() => render(true)).node();\n          function zoom(projection, {\n            // Capture the projection’s original scale, before any zooming.\n            scale = projection._scale === undefined ? projection._scale = projection.scale() : projection._scale,\n            scaleExtent = [1.0, 10]\n          } = {}) {\n            let v0, q0, r0, a0, tl;\n            const zoom = d3.zoom().scaleExtent(scaleExtent.map(x => x * scale)).on('start', zoomstarted).on('zoom', zoomed);\n            function point(event, that) {\n              const t = d3.pointers(event, that);\n              if (t.length !== tl) {\n                tl = t.length;\n                if (tl > 1) {\n                  a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n                }\n                zoomstarted.call(that, event);\n              }\n              return tl > 1 ? [d3.mean(t, p => p[0]), d3.mean(t, p => p[1]), Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0])] : t[0];\n            }\n            function zoomstarted(event) {\n              v0 = versor.cartesian(projection.invert(point(event, this)));\n              q0 = versor(r0 = projection.rotate());\n            }\n            function zoomed(event) {\n              projection.scale(event.transform.k);\n              projectionLookup.scale(event.transform.k);\n              const pt = point(event, this);\n              const v1 = versor.cartesian(projection.rotate(r0).invert(pt));\n              const delta = versor.delta(v0, v1);\n              let q1 = versor.multiply(q0, delta);\n\n              // For multitouch, compose with a rotation around the axis.\n              if (pt[2]) {\n                const d = (pt[2] - a0) / 2;\n                const s = -Math.sin(d);\n                const c = Math.sign(Math.cos(d));\n                q1 = versor.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n              }\n              projection.rotate(versor.rotation(q1));\n              var newPoint = projection.invert([width / 2, width / 2]);\n              obChger = newPoint;\n              observer.longitude = newPoint[0];\n              observer.latitude = newPoint[1];\n              projectionLookup.rotate([observer.longitude, -observer.latitude]);\n\n              // In vicinity of the antipode (unstable) of q0, restart.\n              if (delta[0] < 0.7) {\n                zoomstarted.call(this, event);\n              }\n            }\n            return Object.assign(selection => selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom), {\n              on(type, ...options) {\n                return options.length ? (zoom.on(type, ...options), this) : zoom.on(type);\n              }\n            });\n          }\n        });\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"d3-component\",\n    width: 400,\n    height: 200,\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 10\n  }, this);\n}\n_s(Sphere, \"W4i3Ntv1V7JhLIB1f9IS/+wu8BI=\");\n_c = Sphere;\nvar _c;\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"names":["React","useEffect","useRef","d3","versor","jsxDEV","_jsxDEV","Sphere","_s","d3Container","current","select","remove","svg","starPath","width","projection","geoOrthographic","sphere","type","height","c","geoPath","fitWidth","bounds","x0","y0","x1","y1","dy","Math","ceil","l","min","scale","precision","div","append","canvas","attr","empty","context","node","getContext","observer","longitude","latitude","obChger","flippedStereographic","λ","φ","cosλ","cos","cosφ","k","sin","projectionLookup","geoProjection","clipAngle","rotate","translate","lookupPath","dragPath","gratln","geoGraticule","step","stepMajor","extentMinor","meridian0","extent","equator","ecliptic","coordinates","stars","ctLines","rScale","legendScale","legendSqrt","cLegend","map","drawLegend","max","push","i","scaleLinear","domain","range","scaleSqrt","selectAll","data","enter","d","text","urlA","json","then","urlB","maxMag","starsize","features","properties","mag","pointRadius","render","highend","clearRect","beginPath","fillStyle","fill","lineWidth","strokeStyle","stroke","forEach","star","call","zoom","on","_scale","undefined","scaleExtent","v0","q0","r0","a0","tl","x","zoomstarted","zoomed","point","event","that","t","pointers","length","atan2","mean","p","cartesian","invert","transform","pt","v1","delta","q1","multiply","s","sign","sqrt","rotation","newPoint","Object","assign","selection","property","zoomIdentity","options","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zoo/Desktop/swFestival/src/components/celestialSphere/Sphere.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport versor from 'versor';\n\nexport default function Sphere() {\n  const d3Container = useRef(null);\n\n  useEffect(() => {\n    if (d3Container.current) {\n      d3.select(d3Container.current).select('canvas').remove();\n\n      const svg = d3.select(d3Container.current);\n      let starPath = null;\n      var width = 650; // window.innerWidth;\n      var projection = d3.geoOrthographic();\n      var sphere = { type: 'Sphere' };\n\n      var height = function (c) {\n        var c = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere);\n        var x0 = c[0][0];\n        var y0 = c[0][1];\n        var x1 = c[1][0];\n        var y1 = c[1][1];\n        var dy = Math.ceil(y1 - y0);\n        var l = Math.min(Math.ceil(x1 - x0), dy);\n        projection.scale((projection.scale() * (l - 1)) / l).precision(0.2);\n        return dy;\n      };\n      height = height(width); // made it as number\n\n      const div = svg.append('div');\n      var canvas = div.select('body').append('canvas').attr('width', width).attr('height', height);\n\n      if (!canvas.empty()) {\n        var context = canvas.node().getContext('2d');\n\n        // Angeles National Forest\n        var observer = { longitude: -118.133333, latitude: 34.333333 };\n        var obChger = [observer.longitude, observer.latitude];\n\n        // Lambda λ(scr y axis), Phi φ(scr x axis)\n        function flippedStereographic(λ, φ) {\n          var cosλ = Math.cos(λ);\n          var cosφ = Math.cos(φ);\n          var k = 1 / (1 + cosλ * cosφ);\n          return [-k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n        }\n\n        var projectionLookup = d3\n          .geoProjection(flippedStereographic)\n          .scale(width / 2)\n          .clipAngle(90)\n          .rotate([-observer.longitude, -observer.latitude])\n          .translate([width / 2, height / 2])\n          .precision(0.1);\n\n        projection\n          .scale(width / 2)\n          .clipAngle(90)\n          .rotate([observer.longitude, observer.latitude])\n          .translate([width / 2, height / 2])\n          .precision(0.1);\n\n        // lookup view\n        var lookupPath = d3.geoPath(projectionLookup, context);\n\n        // drag use\n        var dragPath = d3.geoPath(projection, context);\n\n        var gratln = d3\n          .geoGraticule()\n          .step([15, 15])\n          .stepMajor([90, 360])\n          .extentMinor([\n            [-180, -75 - 1e-6],\n            [180, 75 + 1e-6],\n          ])();\n\n        var meridian0 = d3\n          .geoGraticule()\n          .step([90, 0])\n          .extent([\n            [-0.1, -90 - 1e-6],\n            [0.1, 90 + 1e-6],\n          ])();\n\n        var equator = d3\n          .geoGraticule()\n          .step([0, 90])\n          .extent([\n            [-180, -1],\n            [180, 1],\n          ])();\n\n        var ecliptic = {\n          type: 'LineString',\n          coordinates: [\n            [-180, 0],\n            [-90, -23.43656],\n            [0, 0],\n            [90, 23.43656],\n            [180, 0],\n          ],\n        };\n\n        var stars,\n          ctLines,\n          rScale,\n          legendScale,\n          legendSqrt,\n          cLegend = [];\n\n        var map = d3\n          .select('body')\n          .append('svg')\n          .attr('width', width)\n          .attr('height', width / 10)\n          .attr('transform', 'translate(-500, 80)')\n          .append('g')\n          .attr('id', 'legend')\n          .attr('transform', 'translate(20, 35)');\n\n        function drawLegend(min, max) {\n          cLegend.push(min);\n\n          for (let i = 0; i < max; ++i) {\n            cLegend.push(i);\n          }\n          cLegend.push(max);\n\n          legendScale = d3\n            .scaleLinear()\n            .domain([min, max])\n            .range([30, height - height / 10]);\n\n          legendSqrt = d3.scaleSqrt().domain([min, max]).range([max, 0.25]);\n\n          d3.select('#legend')\n            .selectAll('circle')\n            .data(cLegend)\n            .enter()\n            .append('circle')\n            .attr('r', function (d) {\n              return legendSqrt(d);\n            })\n            .attr('cx', function (d) {\n              return legendScale(d);\n            });\n\n          d3.select('#legend')\n            .selectAll('text')\n            .data(cLegend)\n            .enter()\n            .append('text')\n            .attr('x', function (d) {\n              return legendScale(d) - 4;\n            })\n            .attr('y', -25)\n            .attr('fill', 'red')\n            .text(function (d) {\n              return d;\n            });\n        }\n\n        var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.lines.json';\n        d3.json(urlA).then(function (d) {\n          ctLines = d;\n        });\n\n        var urlB = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/stars.8.json';\n        d3.json(urlB).then(function (data) {\n          stars = data;\n          var maxMag,\n            starsize = [];\n\n          //bl.ocks.org/pnavarrc/9730300\n          rScale = d3\n            .scaleSqrt() // scaleLinear()\n            .domain(\n              d3.extent(\n                data.features, // d => d.properties.mag\n                function (d) {\n                  starsize.push(d.properties.mag);\n                  return d.properties.mag;\n                }\n              )\n            )\n            .range([d3.max(starsize), 0.25]);\n          /*\n  // - Try to draw stars legend\n  // d3.max() Mag. dimmest: 8\n  // d3.min() Mag. brightest: -1.44\n  cLegend = [d3.min(starsize), 0, 1, 2, 3, 4, 5, 6, 7, d3.max(starsize)];\n*/\n          // drawLegend(d3.min(starsize), d3.max(starsize));\n          // - End Try\n\n          starPath = d3.geoPath(projectionLookup, context).pointRadius((d) => rScale(d.properties.mag));\n\n          /** the shortest version without rScale\n  starPath = d3.geoPath(projection, context)\n    .pointRadius(d => d.properties ?\n      d3.scaleLinear()\n        .domain(d3.extent(star.features, d => d.properties.mag))\n        .range([5, 1])(d.properties.mag) : 5\n    );\n*/\n          function render(highend) {\n            context.clearRect(0, 0, width, height);\n\n            // Globe Background\n            context.beginPath();\n            lookupPath(sphere);\n            context.fillStyle = 'rgb(1, 16, 32)';\n            context.fill();\n\n            // Graticule\n            context.beginPath();\n            lookupPath(gratln);\n            context.lineWidth = 0.5;\n            context.strokeStyle = '#fff';\n            context.stroke();\n\n            // Equator\n            context.beginPath();\n            context.lineWidth = 2.0;\n            lookupPath(equator);\n            context.strokeStyle = 'rgba(255, 0, 0, 0.85)';\n            context.stroke();\n\n            // Prime Meridian\n            context.beginPath();\n            lookupPath(meridian0);\n            context.strokeStyle = 'rgba(16, 138, 0, 0.85)';\n            context.stroke();\n\n            // Ecliptic\n            context.beginPath();\n            lookupPath(ecliptic);\n            context.strokeStyle = 'rgb(241, 177, 14)';\n            context.stroke();\n\n            // Constellations Lines\n            context.beginPath();\n            lookupPath(ctLines);\n            context.lineWidth = 1.0;\n            context.strokeStyle = 'rgb(255, 255, 32)';\n            context.stroke();\n\n            if (highend) {\n              // Stars Map\n              stars.features.forEach((star) => {\n                context.beginPath();\n                starPath(star);\n                context.fillStyle = 'rgba(255, 255, 255, 0.5)';\n                context.fill();\n              });\n            }\n            // Globe Edge\n            context.beginPath();\n            dragPath(sphere);\n            context.lineWidth = 4.0;\n            context.strokeStyle = '#00f';\n            context.stroke();\n          }\n          render();\n\n          // zoom v6\n          return d3\n            .select(context.canvas)\n            .call(\n              zoom(projection)\n                .on('zoom.render', () => render(false))\n                .on('end.render', () => render(true))\n            )\n            .call(() => render(true))\n            .node();\n\n          function zoom(\n            projection,\n            {\n              // Capture the projection’s original scale, before any zooming.\n              scale = projection._scale === undefined ? (projection._scale = projection.scale()) : projection._scale,\n              scaleExtent = [1.0, 10],\n            } = {}\n          ) {\n            let v0, q0, r0, a0, tl;\n\n            const zoom = d3\n              .zoom()\n              .scaleExtent(scaleExtent.map((x) => x * scale))\n              .on('start', zoomstarted)\n              .on('zoom', zoomed);\n\n            function point(event, that) {\n              const t = d3.pointers(event, that);\n\n              if (t.length !== tl) {\n                tl = t.length;\n\n                if (tl > 1) {\n                  a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n                }\n                zoomstarted.call(that, event);\n              }\n\n              return tl > 1\n                ? [d3.mean(t, (p) => p[0]), d3.mean(t, (p) => p[1]), Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0])]\n                : t[0];\n            }\n\n            function zoomstarted(event) {\n              v0 = versor.cartesian(projection.invert(point(event, this)));\n              q0 = versor((r0 = projection.rotate()));\n            }\n\n            function zoomed(event) {\n              projection.scale(event.transform.k);\n              projectionLookup.scale(event.transform.k);\n\n              const pt = point(event, this);\n              const v1 = versor.cartesian(projection.rotate(r0).invert(pt));\n              const delta = versor.delta(v0, v1);\n              let q1 = versor.multiply(q0, delta);\n\n              // For multitouch, compose with a rotation around the axis.\n              if (pt[2]) {\n                const d = (pt[2] - a0) / 2;\n                const s = -Math.sin(d);\n                const c = Math.sign(Math.cos(d));\n                q1 = versor.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n              }\n              projection.rotate(versor.rotation(q1));\n              var newPoint = projection.invert([width / 2, width / 2]);\n\n              obChger = newPoint;\n              observer.longitude = newPoint[0];\n              observer.latitude = newPoint[1];\n\n              projectionLookup.rotate([observer.longitude, -observer.latitude]);\n\n              // In vicinity of the antipode (unstable) of q0, restart.\n              if (delta[0] < 0.7) {\n                zoomstarted.call(this, event);\n              }\n            }\n\n            return Object.assign(\n              (selection) => selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom),\n              {\n                on(type, ...options) {\n                  return options.length ? (zoom.on(type, ...options), this) : zoom.on(type);\n                },\n              }\n            );\n          }\n        });\n      }\n    }\n  }, []);\n\n  return <svg className='d3-component' width={400} height={200} ref={d3Container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}