{"ast":null,"code":"var _jsxFileName = \"/Users/zoo/Desktop/swFestival/src/components/celestialSphere/Sphere.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport versor from 'versor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sphere() {\n  _s();\n  const d3Container = useRef(null);\n  useEffect(() => {\n    if (d3Container.current) {\n      const canvasExists = !d3.select('body').select('canvas').empty();\n      const svgExists = !d3.select('body').select('svg').empty();\n\n      // 요소가 존재하는 경우에만 제거\n      if (canvasExists) {\n        d3.select('body').select('canvas').remove();\n      }\n      if (svgExists) {\n        d3.select('body').select('svg').remove();\n      }\n\n      // const svg = d3.select(d3Container.current);\n      let starPath = null;\n      var width = 650; // window.innerWidth;\n      var projection = d3.geoOrthographic();\n      var sphere = {\n        type: 'Sphere'\n      };\n      var height = function (c) {\n        var c = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere);\n        var x0 = c[0][0];\n        var y0 = c[0][1];\n        var x1 = c[1][0];\n        var y1 = c[1][1];\n        var dy = Math.ceil(y1 - y0);\n        var l = Math.min(Math.ceil(x1 - x0), dy);\n        projection.scale(projection.scale() * (l - 1) / l).precision(0.2);\n        return dy;\n      };\n      height = height(width); // made it as number\n\n      var canvas = d3.select('body').append('canvas').attr('width', width).attr('height', height);\n      if (!canvas.empty() && canvas.node().parentNode === document.body) {\n        canvas.remove();\n      }\n      const svg = d3.select('body').select('svg');\n      if (!svg.empty() && svg.node().parentNode === document.body) {\n        svg.remove();\n      }\n      var context = canvas.node().getContext('2d');\n\n      // Angeles National Forest\n      var observer = {\n        longitude: -118.133333,\n        latitude: 34.333333\n      };\n      var obChger = [observer.longitude, observer.latitude];\n\n      // Lambda λ(scr y axis), Phi φ(scr x axis)\n      function flippedStereographic(λ, φ) {\n        var cosλ = Math.cos(λ);\n        var cosφ = Math.cos(φ);\n        var k = 1 / (1 + cosλ * cosφ);\n        return [-k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n      }\n      var projectionLookup = d3.geoProjection(flippedStereographic).scale(width / 2).clipAngle(90).rotate([-observer.longitude, -observer.latitude]).translate([width / 2, height / 2]).precision(0.1);\n      projection.scale(width / 2).clipAngle(90).rotate([observer.longitude, observer.latitude]).translate([width / 2, height / 2]).precision(0.1);\n\n      // lookup view\n      var lookupPath = d3.geoPath(projectionLookup, context);\n\n      // drag use\n      var dragPath = d3.geoPath(projection, context);\n      var gratln = d3.geoGraticule().step([15, 15]).stepMajor([90, 360]).extentMinor([[-180, -75 - 1e-6], [180, 75 + 1e-6]])();\n      var meridian0 = d3.geoGraticule().step([90, 0]).extent([[-0.1, -90 - 1e-6], [0.1, 90 + 1e-6]])();\n      var equator = d3.geoGraticule().step([0, 90]).extent([[-180, -1], [180, 1]])();\n      var ecliptic = {\n        type: 'LineString',\n        coordinates: [[-180, 0], [-90, -23.43656], [0, 0], [90, 23.43656], [180, 0]]\n      };\n      var stars,\n        ctLines,\n        rScale,\n        legendScale,\n        legendSqrt,\n        cLegend = [];\n      var map = d3.select('body').append('svg').attr('width', width).attr('height', width / 10).attr('transform', 'translate(-500, 80)').append('g').attr('id', 'legend').attr('transform', 'translate(20, 35)');\n      function drawLegend(min, max) {\n        cLegend.push(min);\n        for (let i = 0; i < max; ++i) {\n          cLegend.push(i);\n        }\n        cLegend.push(max);\n        legendScale = d3.scaleLinear().domain([min, max]).range([30, height - height / 10]);\n        legendSqrt = d3.scaleSqrt().domain([min, max]).range([max, 0.25]);\n        d3.select('#legend').selectAll('circle').data(cLegend).enter().append('circle').attr('r', function (d) {\n          return legendSqrt(d);\n        }).attr('cx', function (d) {\n          return legendScale(d);\n        });\n        d3.select('#legend').selectAll('text').data(cLegend).enter().append('text').attr('x', function (d) {\n          return legendScale(d) - 4;\n        }).attr('y', -25).attr('fill', 'red').text(function (d) {\n          return d;\n        });\n      }\n      var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.lines.json';\n      d3.json(urlA).then(function (d) {\n        ctLines = d;\n      });\n      var urlB = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/stars.8.json';\n      d3.json(urlB).then(function (data) {\n        stars = data;\n        var maxMag,\n          starsize = [];\n\n        //bl.ocks.org/pnavarrc/9730300\n        rScale = d3.scaleSqrt() // scaleLinear()\n        .domain(d3.extent(data.features,\n        // d => d.properties.mag\n        function (d) {\n          starsize.push(d.properties.mag);\n          return d.properties.mag;\n        })).range([d3.max(starsize), 0.25]);\n        /*\n        // - Try to draw stars legend\n        // d3.max() Mag. dimmest: 8\n        // d3.min() Mag. brightest: -1.44\n        cLegend = [d3.min(starsize), 0, 1, 2, 3, 4, 5, 6, 7, d3.max(starsize)];\n        */\n        // drawLegend(d3.min(starsize), d3.max(starsize));\n        // - End Try\n\n        starPath = d3.geoPath(projectionLookup, context).pointRadius(d => rScale(d.properties.mag));\n\n        /** the shortest version without rScale\n        starPath = d3.geoPath(projection, context)\n        .pointRadius(d => d.properties ?\n        d3.scaleLinear()\n        .domain(d3.extent(star.features, d => d.properties.mag))\n        .range([5, 1])(d.properties.mag) : 5\n        );\n        */\n        function render(highend) {\n          context.clearRect(0, 0, width, height);\n\n          // Globe Background\n          context.beginPath();\n          lookupPath(sphere);\n          context.fillStyle = 'rgb(1, 16, 32)';\n          context.fill();\n\n          // Graticule\n          context.beginPath();\n          lookupPath(gratln);\n          context.lineWidth = 0.5;\n          context.strokeStyle = '#fff';\n          context.stroke();\n\n          // Equator\n          context.beginPath();\n          context.lineWidth = 2.0;\n          lookupPath(equator);\n          context.strokeStyle = 'rgba(255, 0, 0, 0.85)';\n          context.stroke();\n\n          // Prime Meridian\n          context.beginPath();\n          lookupPath(meridian0);\n          context.strokeStyle = 'rgba(16, 138, 0, 0.85)';\n          context.stroke();\n\n          // Ecliptic\n          context.beginPath();\n          lookupPath(ecliptic);\n          context.strokeStyle = 'rgb(241, 177, 14)';\n          context.stroke();\n\n          // Constellations Lines\n          context.beginPath();\n          lookupPath(ctLines);\n          context.lineWidth = 1.0;\n          context.strokeStyle = 'rgb(255, 255, 32)';\n          context.stroke();\n          if (highend) {\n            // Stars Map\n            stars.features.forEach(star => {\n              context.beginPath();\n              starPath(star);\n              context.fillStyle = 'rgba(255, 255, 255, 0.5)';\n              context.fill();\n            });\n          }\n          // Globe Edge\n          context.beginPath();\n          dragPath(sphere);\n          context.lineWidth = 4.0;\n          context.strokeStyle = '#00f';\n          context.stroke();\n        }\n        render();\n\n        // zoom v6\n        return d3.select(context.canvas).call(zoom(projection).on('zoom.render', () => render(false)).on('end.render', () => render(true))).call(() => render(true)).node();\n        function zoom(projection, {\n          // Capture the projection’s original scale, before any zooming.\n          scale = projection._scale === undefined ? projection._scale = projection.scale() : projection._scale,\n          scaleExtent = [1.0, 10]\n        } = {}) {\n          let v0, q0, r0, a0, tl;\n          const zoom = d3.zoom().scaleExtent(scaleExtent.map(x => x * scale)).on('start', zoomstarted).on('zoom', zoomed);\n          function point(event, that) {\n            const t = d3.pointers(event, that);\n            if (t.length !== tl) {\n              tl = t.length;\n              if (tl > 1) {\n                a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n              }\n              zoomstarted.call(that, event);\n            }\n            return tl > 1 ? [d3.mean(t, p => p[0]), d3.mean(t, p => p[1]), Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0])] : t[0];\n          }\n          function zoomstarted(event) {\n            v0 = versor.cartesian(projection.invert(point(event, this)));\n            q0 = versor(r0 = projection.rotate());\n          }\n          function zoomed(event) {\n            projection.scale(event.transform.k);\n            projectionLookup.scale(event.transform.k);\n            const pt = point(event, this);\n            const v1 = versor.cartesian(projection.rotate(r0).invert(pt));\n            const delta = versor.delta(v0, v1);\n            let q1 = versor.multiply(q0, delta);\n\n            // For multitouch, compose with a rotation around the axis.\n            if (pt[2]) {\n              const d = (pt[2] - a0) / 2;\n              const s = -Math.sin(d);\n              const c = Math.sign(Math.cos(d));\n              q1 = versor.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n            }\n            projection.rotate(versor.rotation(q1));\n            var newPoint = projection.invert([width / 2, width / 2]);\n            obChger = newPoint;\n            observer.longitude = newPoint[0];\n            observer.latitude = newPoint[1];\n            projectionLookup.rotate([observer.longitude, -observer.latitude]);\n\n            // In vicinity of the antipode (unstable) of q0, restart.\n            if (delta[0] < 0.7) {\n              zoomstarted.call(this, event);\n            }\n          }\n          return Object.assign(selection => selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom), {\n            on(type, ...options) {\n              return options.length ? (zoom.on(type, ...options), this) : zoom.on(type);\n            }\n          });\n        }\n      });\n    }\n  }, []);\n  return;\n  /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"d3-component\",\n    width: 400,\n    height: 200,\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 3\n  }, this);\n}\n_s(Sphere, \"W4i3Ntv1V7JhLIB1f9IS/+wu8BI=\");\n_c = Sphere;\nvar _c;\n$RefreshReg$(_c, \"Sphere\");","map":{"version":3,"names":["React","useEffect","useRef","d3","versor","jsxDEV","_jsxDEV","Sphere","_s","d3Container","current","canvasExists","select","empty","svgExists","remove","starPath","width","projection","geoOrthographic","sphere","type","height","c","geoPath","fitWidth","bounds","x0","y0","x1","y1","dy","Math","ceil","l","min","scale","precision","canvas","append","attr","node","parentNode","document","body","svg","context","getContext","observer","longitude","latitude","obChger","flippedStereographic","λ","φ","cosλ","cos","cosφ","k","sin","projectionLookup","geoProjection","clipAngle","rotate","translate","lookupPath","dragPath","gratln","geoGraticule","step","stepMajor","extentMinor","meridian0","extent","equator","ecliptic","coordinates","stars","ctLines","rScale","legendScale","legendSqrt","cLegend","map","drawLegend","max","push","i","scaleLinear","domain","range","scaleSqrt","selectAll","data","enter","d","text","urlA","json","then","urlB","maxMag","starsize","features","properties","mag","pointRadius","render","highend","clearRect","beginPath","fillStyle","fill","lineWidth","strokeStyle","stroke","forEach","star","call","zoom","on","_scale","undefined","scaleExtent","v0","q0","r0","a0","tl","x","zoomstarted","zoomed","point","event","that","t","pointers","length","atan2","mean","p","cartesian","invert","transform","pt","v1","delta","q1","multiply","s","sign","sqrt","rotation","newPoint","Object","assign","selection","property","zoomIdentity","options","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zoo/Desktop/swFestival/src/components/celestialSphere/Sphere.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport versor from 'versor';\n\nexport default function Sphere() {\n  const d3Container = useRef(null);\n\n  useEffect(() => {\n    if (d3Container.current) {\n      const canvasExists = !d3.select('body').select('canvas').empty();\n      const svgExists = !d3.select('body').select('svg').empty();\n\n      // 요소가 존재하는 경우에만 제거\n      if (canvasExists) {\n        d3.select('body').select('canvas').remove();\n      }\n      if (svgExists) {\n        d3.select('body').select('svg').remove();\n      }\n\n      // const svg = d3.select(d3Container.current);\n      let starPath = null;\n      var width = 650; // window.innerWidth;\n      var projection = d3.geoOrthographic();\n      var sphere = { type: 'Sphere' };\n\n      var height = function (c) {\n        var c = d3.geoPath(projection.fitWidth(width, sphere)).bounds(sphere);\n        var x0 = c[0][0];\n        var y0 = c[0][1];\n        var x1 = c[1][0];\n        var y1 = c[1][1];\n        var dy = Math.ceil(y1 - y0);\n        var l = Math.min(Math.ceil(x1 - x0), dy);\n        projection.scale((projection.scale() * (l - 1)) / l).precision(0.2);\n        return dy;\n      };\n      height = height(width); // made it as number\n\n      var canvas = d3.select('body').append('canvas').attr('width', width).attr('height', height);\n      if (!canvas.empty() && canvas.node().parentNode === document.body) {\n        canvas.remove();\n      }\n\n      const svg = d3.select('body').select('svg');\n      if (!svg.empty() && svg.node().parentNode === document.body) {\n        svg.remove();\n      }\n\n      var context = canvas.node().getContext('2d');\n\n      // Angeles National Forest\n      var observer = { longitude: -118.133333, latitude: 34.333333 };\n      var obChger = [observer.longitude, observer.latitude];\n\n      // Lambda λ(scr y axis), Phi φ(scr x axis)\n      function flippedStereographic(λ, φ) {\n        var cosλ = Math.cos(λ);\n        var cosφ = Math.cos(φ);\n        var k = 1 / (1 + cosλ * cosφ);\n        return [-k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n      }\n\n      var projectionLookup = d3\n        .geoProjection(flippedStereographic)\n        .scale(width / 2)\n        .clipAngle(90)\n        .rotate([-observer.longitude, -observer.latitude])\n        .translate([width / 2, height / 2])\n        .precision(0.1);\n\n      projection\n        .scale(width / 2)\n        .clipAngle(90)\n        .rotate([observer.longitude, observer.latitude])\n        .translate([width / 2, height / 2])\n        .precision(0.1);\n\n      // lookup view\n      var lookupPath = d3.geoPath(projectionLookup, context);\n\n      // drag use\n      var dragPath = d3.geoPath(projection, context);\n\n      var gratln = d3\n        .geoGraticule()\n        .step([15, 15])\n        .stepMajor([90, 360])\n        .extentMinor([\n          [-180, -75 - 1e-6],\n          [180, 75 + 1e-6],\n        ])();\n\n      var meridian0 = d3\n        .geoGraticule()\n        .step([90, 0])\n        .extent([\n          [-0.1, -90 - 1e-6],\n          [0.1, 90 + 1e-6],\n        ])();\n\n      var equator = d3\n        .geoGraticule()\n        .step([0, 90])\n        .extent([\n          [-180, -1],\n          [180, 1],\n        ])();\n\n      var ecliptic = {\n        type: 'LineString',\n        coordinates: [\n          [-180, 0],\n          [-90, -23.43656],\n          [0, 0],\n          [90, 23.43656],\n          [180, 0],\n        ],\n      };\n\n      var stars,\n        ctLines,\n        rScale,\n        legendScale,\n        legendSqrt,\n        cLegend = [];\n\n      var map = d3\n        .select('body')\n        .append('svg')\n        .attr('width', width)\n        .attr('height', width / 10)\n        .attr('transform', 'translate(-500, 80)')\n        .append('g')\n        .attr('id', 'legend')\n        .attr('transform', 'translate(20, 35)');\n\n      function drawLegend(min, max) {\n        cLegend.push(min);\n\n        for (let i = 0; i < max; ++i) {\n          cLegend.push(i);\n        }\n        cLegend.push(max);\n\n        legendScale = d3\n          .scaleLinear()\n          .domain([min, max])\n          .range([30, height - height / 10]);\n\n        legendSqrt = d3.scaleSqrt().domain([min, max]).range([max, 0.25]);\n\n        d3.select('#legend')\n          .selectAll('circle')\n          .data(cLegend)\n          .enter()\n          .append('circle')\n          .attr('r', function (d) {\n            return legendSqrt(d);\n          })\n          .attr('cx', function (d) {\n            return legendScale(d);\n          });\n\n        d3.select('#legend')\n          .selectAll('text')\n          .data(cLegend)\n          .enter()\n          .append('text')\n          .attr('x', function (d) {\n            return legendScale(d) - 4;\n          })\n          .attr('y', -25)\n          .attr('fill', 'red')\n          .text(function (d) {\n            return d;\n          });\n      }\n\n      var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.lines.json';\n      d3.json(urlA).then(function (d) {\n        ctLines = d;\n      });\n\n      var urlB = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/stars.8.json';\n      d3.json(urlB).then(function (data) {\n        stars = data;\n        var maxMag,\n          starsize = [];\n\n        //bl.ocks.org/pnavarrc/9730300\n        rScale = d3\n          .scaleSqrt() // scaleLinear()\n          .domain(\n            d3.extent(\n              data.features, // d => d.properties.mag\n              function (d) {\n                starsize.push(d.properties.mag);\n                return d.properties.mag;\n              }\n            )\n          )\n          .range([d3.max(starsize), 0.25]);\n        /*\n  // - Try to draw stars legend\n  // d3.max() Mag. dimmest: 8\n  // d3.min() Mag. brightest: -1.44\n  cLegend = [d3.min(starsize), 0, 1, 2, 3, 4, 5, 6, 7, d3.max(starsize)];\n*/\n        // drawLegend(d3.min(starsize), d3.max(starsize));\n        // - End Try\n\n        starPath = d3.geoPath(projectionLookup, context).pointRadius((d) => rScale(d.properties.mag));\n\n        /** the shortest version without rScale\n  starPath = d3.geoPath(projection, context)\n    .pointRadius(d => d.properties ?\n      d3.scaleLinear()\n        .domain(d3.extent(star.features, d => d.properties.mag))\n        .range([5, 1])(d.properties.mag) : 5\n    );\n*/\n        function render(highend) {\n          context.clearRect(0, 0, width, height);\n\n          // Globe Background\n          context.beginPath();\n          lookupPath(sphere);\n          context.fillStyle = 'rgb(1, 16, 32)';\n          context.fill();\n\n          // Graticule\n          context.beginPath();\n          lookupPath(gratln);\n          context.lineWidth = 0.5;\n          context.strokeStyle = '#fff';\n          context.stroke();\n\n          // Equator\n          context.beginPath();\n          context.lineWidth = 2.0;\n          lookupPath(equator);\n          context.strokeStyle = 'rgba(255, 0, 0, 0.85)';\n          context.stroke();\n\n          // Prime Meridian\n          context.beginPath();\n          lookupPath(meridian0);\n          context.strokeStyle = 'rgba(16, 138, 0, 0.85)';\n          context.stroke();\n\n          // Ecliptic\n          context.beginPath();\n          lookupPath(ecliptic);\n          context.strokeStyle = 'rgb(241, 177, 14)';\n          context.stroke();\n\n          // Constellations Lines\n          context.beginPath();\n          lookupPath(ctLines);\n          context.lineWidth = 1.0;\n          context.strokeStyle = 'rgb(255, 255, 32)';\n          context.stroke();\n\n          if (highend) {\n            // Stars Map\n            stars.features.forEach((star) => {\n              context.beginPath();\n              starPath(star);\n              context.fillStyle = 'rgba(255, 255, 255, 0.5)';\n              context.fill();\n            });\n          }\n          // Globe Edge\n          context.beginPath();\n          dragPath(sphere);\n          context.lineWidth = 4.0;\n          context.strokeStyle = '#00f';\n          context.stroke();\n        }\n        render();\n\n        // zoom v6\n        return d3\n          .select(context.canvas)\n          .call(\n            zoom(projection)\n              .on('zoom.render', () => render(false))\n              .on('end.render', () => render(true))\n          )\n          .call(() => render(true))\n          .node();\n\n        function zoom(\n          projection,\n          {\n            // Capture the projection’s original scale, before any zooming.\n            scale = projection._scale === undefined ? (projection._scale = projection.scale()) : projection._scale,\n            scaleExtent = [1.0, 10],\n          } = {}\n        ) {\n          let v0, q0, r0, a0, tl;\n\n          const zoom = d3\n            .zoom()\n            .scaleExtent(scaleExtent.map((x) => x * scale))\n            .on('start', zoomstarted)\n            .on('zoom', zoomed);\n\n          function point(event, that) {\n            const t = d3.pointers(event, that);\n\n            if (t.length !== tl) {\n              tl = t.length;\n\n              if (tl > 1) {\n                a0 = Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0]);\n              }\n              zoomstarted.call(that, event);\n            }\n\n            return tl > 1\n              ? [d3.mean(t, (p) => p[0]), d3.mean(t, (p) => p[1]), Math.atan2(t[1][1] - t[0][1], t[1][0] - t[0][0])]\n              : t[0];\n          }\n\n          function zoomstarted(event) {\n            v0 = versor.cartesian(projection.invert(point(event, this)));\n            q0 = versor((r0 = projection.rotate()));\n          }\n\n          function zoomed(event) {\n            projection.scale(event.transform.k);\n            projectionLookup.scale(event.transform.k);\n\n            const pt = point(event, this);\n            const v1 = versor.cartesian(projection.rotate(r0).invert(pt));\n            const delta = versor.delta(v0, v1);\n            let q1 = versor.multiply(q0, delta);\n\n            // For multitouch, compose with a rotation around the axis.\n            if (pt[2]) {\n              const d = (pt[2] - a0) / 2;\n              const s = -Math.sin(d);\n              const c = Math.sign(Math.cos(d));\n              q1 = versor.multiply([Math.sqrt(1 - s * s), 0, 0, c * s], q1);\n            }\n            projection.rotate(versor.rotation(q1));\n            var newPoint = projection.invert([width / 2, width / 2]);\n\n            obChger = newPoint;\n            observer.longitude = newPoint[0];\n            observer.latitude = newPoint[1];\n\n            projectionLookup.rotate([observer.longitude, -observer.latitude]);\n\n            // In vicinity of the antipode (unstable) of q0, restart.\n            if (delta[0] < 0.7) {\n              zoomstarted.call(this, event);\n            }\n          }\n\n          return Object.assign(\n            (selection) => selection.property('__zoom', d3.zoomIdentity.scale(projection.scale())).call(zoom),\n            {\n              on(type, ...options) {\n                return options.length ? (zoom.on(type, ...options), this) : zoom.on(type);\n              },\n            }\n          );\n        }\n      });\n    }\n  }, []);\n\n  return;\n  <svg className='d3-component' width={400} height={200} ref={d3Container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}